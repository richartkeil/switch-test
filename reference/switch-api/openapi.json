{
  "openapi": "3.0.0",
  "info": {
    "title": "Switch API",
    "version": "1.0",
    "description": "Technical Documentation for the Switch API."
  },
  "x-stoplight": {
    "docs": {
      "showModels": false
    }
  },
  "servers": [
    {
      "url": "http://switch.exposify.io"
    }
  ],
  "paths": {
    "/properties": {
      "post": {
        "summary": "Create a property",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/property.v1.json"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "https://switch-schema.netlify.com/property.openApi.json"
              }
            }
          }
        },
        "operationId": "",
        "description": "Add a new property to your account.",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "get": {
        "summary": "List all properties",
        "description": "Return all properties of your account.",
        "requestBody": {
          "description": ""
        },
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "./models/property.v1.json"
                  }
                }
              }
            }
          }
        },
        "operationId": ""
      }
    },
    "/targets": {
      "get": {
        "summary": "List all targets",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Targets"
        ],
        "description": "",
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "summary": "Create a new target",
        "tags": [
          "Targets"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "api-key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/properties/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the property."
        }
      ],
      "get": {
        "summary": "Get a property",
        "tags": [
          "Properties"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Return the specific property of your account.",
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "put": {
        "summary": "Update a property",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./models/property.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Update the property of your account.",
        "security": [
          {
            "api-key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./models/property.v1.json"
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete a property",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Delete the property of your account.",
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/targets/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the target."
        }
      ],
      "get": {
        "summary": "Get a target",
        "tags": [
          "Targets"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "",
        "security": [
          {
            "api-key": []
          }
        ],
        "requestBody": {}
      },
      "put": {
        "summary": "Update a target",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "",
        "security": [
          {
            "api-key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a target",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": ""
      }
    },
    "/listings": {
      "get": {
        "summary": "Get all listings",
        "tags": [
          "Listings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "",
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "summary": "Create a listing",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/listings/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the listing."
        }
      ],
      "get": {
        "summary": "Delete a listing",
        "tags": [
          "Listings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "put": {
        "summary": "Update a listing",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "",
        "security": [
          {
            "api-key": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api-key": {
        "name": "API Key",
        "type": "apiKey",
        "in": "header"
      }
    }
  }
}